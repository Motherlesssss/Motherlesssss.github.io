<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git学习记录（正在持续更新）</title>
      <link href="/posts/ea6d17dc.html"/>
      <url>/posts/ea6d17dc.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：下里巴人</p><footer><strong>来自</strong><cite>南京审计大学</cite></footer></blockquote><blockquote><p><strong>前言：</strong></p><p>博主在业余时间一直在学习有关hexo博客框架的内容，发现git版本控制贯穿始终，而作为一个计算机小白，对此的接触仅限于我见到的教程里那些git命令，我对此并不了解。然后便打算开始跟着<a href="https://www.liaoxuefeng.com/">廖雪峰老师</a></p>进行学习，本文是此次的学习记录，有需要的自行取用哈^_^</p></blockquote><h1 id="什么是Git"><a href="#什么是Git" class="headerlink" title="什么是Git"></a>什么是Git</h1><ul>  <li>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</li>  <li>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</li>  <li>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</li></ul><h1 id="我们为什么要学习Git"><a href="#我们为什么要学习Git" class="headerlink" title="我们为什么要学习Git"></a>我们为什么要学习Git</h1><p>对于这个问题，廖雪峰老师有一段很恰当例子，我引用在下面：</p><p>“如果你用Microsoft Word写过长篇大论，那你一定有这样的经历：想删除一个段落，又怕将来想恢复找不回来怎么办？有办法，先把当前文件“另存为……”一个新的Word文件，再接着改，改到一定程度，再“另存为……”一个新文件，这样一直改下去，最后你的Word文档变成了这样：”</p><img src="https://pic3.zhimg.com/80/v2-27eef97b9a22b45b482186e014c3c436_1440w.webp"><p>过了一周，你想找回被删除的文字，但是已经记不清删除前保存在哪个文件里了，只好一个一个文件去找，真麻烦。看着一堆乱七八糟的文件，想保留最新的一个，然后把其他的删掉，又怕哪天会用上，还不敢删，真郁闷。更要命的是，有些部分需要你的财务同事帮助填写，于是你把文件Copy到U盘里给她（也可能通过Email发送一份给她），然后，你继续修改Word文件。一天后，同事再把Word文件传给你，此时，你必须想想，发给她之后到你收到她的文件期间，你作了哪些改动，得把你的改动和她的部分合并，真困难。于是你想，如果有一个软件，不但能自动帮我记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以，岂不是很方便？这个软件用起来就应该像这个样子，能记录每次文件的改动：</p><img src="https://pic1.zhimg.com/80/v2-15f0bf1a202ea91e888c100ce86f2220_1440w.webp"><p>这样，你就结束了手动管理多个“版本”的史前时代，进入到版本控制的20世纪。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于日本2-1德国之后的一些随想</title>
      <link href="/posts/15d1eb56.html"/>
      <url>/posts/15d1eb56.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：下里巴人</p><footer><strong>来自</strong><cite>南京审计大学</cite></footer></blockquote><h1 id="一些感慨"><a href="#一些感慨" class="headerlink" title="一些感慨"></a>一些感慨</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;作为中立球迷，今天全程看完了德国队和日本队的比赛，感慨良多。  虽然说实话，不是很喜欢日本这个国家，但是不得不说，这一支日本队真的让人难以吝啬自己的赞美。他们用自己的表现告诉世界，黄种人是可以踢好足球的！ 虽然我们都在为亚洲之光骄傲，但是作为一个中国人，内心更多的，我想是一种羡慕 一种嫉妒。当日本的球员早已布满世界五大联赛之时 我们却只有武磊能拿得出手。当日本高中联赛决赛万人空巷的时候 我们国家的职业联赛甚至一度停摆。当日本青训的努力终于显示出成效的时候，我们却还在投机取巧，想着怎么规划国外的球员….上帝不会辜负任何人的努力。今天日本2-1击败德国，就是最好的证明。  他们的技战术 他们的战术执行力 他们的韧性 ….无一不让我们汗颜 当年对比利时的淘汰赛，当日本举国反思那魔鬼一般的14秒时 他们就已经赢了。 </p> <img src="https://bdimg6.qunliao.info/fastdfs6/M00/22/59/rBUESWN-omWAEO_bAAEtNG68gfM849.jpg"><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;日本很早就定下了2050年的目标：承办世界杯 并夺取冠军。当时有多少人在嘲笑？而现在呢？日本女足早已夺得世界杯冠军，男足稳步发展 他们不仅敢“做梦” 他们更是追梦人…</p>他们为了这个目标究竟付出了多少努力呢？<h1 id="日本联赛发展史"><a href="#日本联赛发展史" class="headerlink" title="日本联赛发展史"></a>日本联赛发展史</h1><div class="timeline "><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>1966</p></div></div><div class='timeline-item-content'><p>日本各地域联赛和都道府县联赛陆续开展，直至今日，这一联赛系统还保留着。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>1968</p></div></div><div class='timeline-item-content'><p>日本队再一次出现在了墨西哥奥运会的赛场上，在传奇射手釜本邦茂的率领下，日本队奇迹般地获得了季军。而釜本邦茂不仅在当届奥运会荣膺射手王，也因其在绿茵场上的贡献最终成为了日本参议院的议员。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>1976</p></div></div><div class='timeline-item-content'><p>日本青少年球员训练中心体系正式起步，由日本足协直接主管，主要分为地区训练中心和都道府县训练中心。并于1980年正式开始开展训练活动。<br>同年，足球漫画《足球小将》问世，一下子扩大了足本青少年足球人口的数量。正是通过这部漫画，中田英寿、中村俊辅、川口能活等球员立志于像大空翼一样冲出亚洲、走向世界。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>1980年代</p></div></div><div class='timeline-item-content'><p>长期由企业队主导的日本各级别联赛依然在较低水平徘徊。直到1984年的麒麟杯邀请赛，日本足球才历史上第一次战胜中国队。<br>在80年代末，为了提升日本足球的水准，为日本国内那些有天赋有的</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>1989</p></div></div><div class='timeline-item-content'><p>日本足协分别成立了日本职业足球联赛筹备小组、日本职业足球联赛筹备委员会对现有的日本联赛进行现状分析，并且对其他国家职业联赛的模式、对所要创设的职业联赛构思、参加职业联赛团体的条件等进行全方位的调查研究，并对创设职业联赛的事宜进行具体操作。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>1991</p></div></div><div class='timeline-item-content'><p>发表职业联赛的正式名称，即“日本职业足球联赛”（J联赛），并确立了组织机构、加盟队数、比赛机制等。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>1993</p></div></div><div class='timeline-item-content'><p>J联赛登上了历史舞台</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>截止2020</p></div></div><div class='timeline-item-content'><p>J联赛成功建成了“职业联赛-JFL联赛-业余联赛”的二级七层金字塔制度<br>日本境内共有26590支足球队<br>经过近30年的发展，J联赛已经成为前国际足联主席布拉特口中“亚洲最成功的职业联赛”。</p></div></div></div>(引自懂球号作者:JekyllHyde)<p>从这里我们不难看出，日本的联赛发展也是整个日本足球发展的缩影-脚踏实地。<br>看似平庸，可这也恰恰是尊重足球规律的发展路径。反观我们国家的职业联赛，是否已经迷失在了商业化的温柔乡中…当日本球员遍布五大联赛之时，我们却一度联赛停摆…我们的武磊<br>依然饱受争议…我想，我们是否太过浮躁，我们是否应该静下心来，仔细的，认真的，脚踏实地，去发展呢？</p><h1 id="《日本足协2005宣言》"><a href="#《日本足协2005宣言》" class="headerlink" title="《日本足协2005宣言》"></a>《日本足协2005宣言》</h1><h2 id="提出背景"><a href="#提出背景" class="headerlink" title="提出背景"></a>提出背景</h2><p>1988年，川渊三郎加入日本足协，谈起刚工作时的目标，川渊三郎说：“当时人们对日本足球不抱希望了，因为我们太弱了。我想做的事情就是能让人们对足球感兴趣。”<br>川渊三郎开始计划在日本国内筹办职业足球联赛，1993年，日本职业联赛（J联赛）诞生，可这一年，日本足球遭遇“多哈悲剧”——在世界杯亚洲区预选赛最后一场比赛中，只要战胜伊拉克，日本就可以 晋级世界杯。可惜比赛结束前日本被追平，2∶2的比分让他们哭着回家。<br>3年后，川渊三郎推出了一份雄心万丈的“百年规划”。  </p><h2 id="规划内容"><a href="#规划内容" class="headerlink" title="规划内容"></a>规划内容</h2><div class="timeline "><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2015</p></div></div><div class='timeline-item-content'><p>成为世界前10的足协，足球人口500万人（球员及其家庭、足球工作者、注册的球迷），球队进入世界前十</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2050</p></div></div><div class='timeline-item-content'><p>足球人口1000万，占日本总人口10%，再举办一次世界杯并获得冠军。</p></div></div></div><p>刚刚提出的时候，国内嘲笑一片。毕竟那时候谁会相信，那一支1984年才第一次战胜中国队的日本队，会实现这个目标？<br>但是我们现在来看，早在2011年，日本女足早已夺得世界杯冠军。男足旅欧人员已达惊人的451人…我想，30年的时间，足以完成这个看似不可能的漫画中的目标…<br><img src="https://bdimg6.qunliao.info/fastdfs6/M00/22/5B/rBUESWN-oreAOV7KAARK2L8VHwE047.png"></p><h1 id="结"><a href="#结" class="headerlink" title="结"></a>结</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里只是一些个人的想法，一些资料也是引自懂球号作者:JekyllHyde。这场比赛真的很精彩，这是属于亚洲的骄傲。但是当我们浅显的看完这些资料之后，更多的，我想，还是对国足的反思。我们究竟需要什么，我们应该怎么干，我想，有时我们这个略显“卑鄙”的邻国，确实能够给我们一些启发吧...]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 足球 </tag>
            
            <tag> 吐槽 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫-urllib爬取猫眼电影信息</title>
      <link href="/posts/47402b14.html"/>
      <url>/posts/47402b14.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：风雨无组所有成员 (<em>^▽^</em>)</p><footer><strong>来自</strong><cite>南京审计大学</cite></footer></blockquote><blockquote><p><strong>前言：</strong></p><p>本文全程记录“数据采集技术”这门课的一份小组作业的实现过程，包括选题，数据爬取与数据分析，这是所有“风雨无组”小组成员的努力成果(*^▽^*)</p></blockquote><p><h1>一.选题背景及意义</h1></p><ul>    <li><h2><strong>1.1背景：</strong></h2>    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;随着经济和科技的日益发展，给人们的物质生活带来了极大的变化的同时也使人们对精神方面的消费需求愈发提高。电影产业作为文化产业的核心组成部分，已成为人们生活中不可或缺的一种娱乐方式，不仅仅是对文化领域有着重要的影响，更成为促进经济发展的强大动力。在计算机网络覆盖全球的今天，文化与经济两大主体早就脱离了互不干涉、没有交集的情况，而文化产业也正在逐渐发展成为影响世界经济发展的重要部分。在短短一百多年的时间里，电影产业不断地发展壮大，现在它早就凭借着其特殊的魅力和巨大的吸引力成为推动国民经济迅速增长的产业之一。中国自从改革开放以来一直始终坚持与世界接轨，紧跟世界发展潮流，在改革中打破原有的经济体制并成功研究出符合中国的特殊国情的社会主义市场经济体制，这也是我国的电影产业随之开始向市场化转变最重要的政治基础。我国影视行业发展迅速,成为全球第二大电影市场,同时也是增长最快的市场之一。据中国新闻出版广电总局调查显示,2017年全国电影总票房已经超过550亿，这说明中国电影产业有着良好的发展前景。</p></li>    <li><h2><strong>1.2前言：</strong></h2>    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;研究中国电影的现状和存在的问题，有利于分析出我国电影产业发展的优势与劣势，找出其他国家电影发展有利方法加以借鉴从而推动电影产业的快速发展，最为重要的是有利于抵御外来电影大片的带来的文化和经济冲击，有利于中华传统文化的传承与延续和社会经济的发展。而票房反映了一部电影的商业效益，对后续电影拍摄计划和方向有着重大影响，也是衡量一部电影是否盈利与是否成功的重要指标。然而，国产电影只有极少数是盈利的，70%的国产电影都面临亏损，高投入低票房低收益的电影案例也屡见不鲜,如2016年上映的《封神传奇》斥资5亿,却只收获2.84亿的票房。因此，对电影票房的有效分析将有利于降低电影投资市场的风险，对电影投资、制作及营销各个阶段都有着重要的指导性意义。而目前国内电影票房的研究还处在经验分析阶段，依赖于专家判断，缺乏数据技术支撑。为引导电影产业的理性决策，对电影票房的数据分析显得尤为必要。</p></li></ul><p><h1>二.获取目标数据</h1></p><h2><strong>2.1：目标网站分析</strong></h2><h3><strong>2.1.1：获取来源</strong></h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;小组将主要从猫眼电影（https://www.maoyan.com）获取数据。猫眼电影是美团旗下的一家集媒体内容、在线购票、用户互动社交、电影衍生品销售等服务的一站式电影互联网平台。2015年6月，猫眼电影覆盖影院超过4000家，这些影院的票房贡献占比超过90%。猫眼占网络购票70%的市场份额，每三张电影票就有一张出自猫眼电影，是影迷下载量较多、使用率较高的电影应用软件。同时，猫眼电影为合作影院和电影制片发行方提供覆盖海量电影消费者的精准营销方案，助力影片票房。2015年上半年，猫眼电影交易额达60亿，超过2014年全年。</p><h3><strong>2.1.2：目标数据</strong></h3><p>小组将爬取豆瓣近五年来每年评分排名前90的电影，并爬取这些电影的名字、类型、评论等相关数据。</p><ul>    <li><p><strong>时间跨度：</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;小组爬取豆瓣近五年来的数据，充分考虑到了时代变化的因素，可以跳脱出获取数据时的静态局限，进一步反映出观众对电影的偏好的动态变化，从而可以帮助预测未来电影行业的趋势、发展。</p></li>    <li><p><strong>评分：</strong><p></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;电影的评分往往与电影的质量、观众的喜爱程度有着密不可分的正相关的关系，对电影评分排名的爬取可以从宏观上帮助小组初步筛选出更符合观众观影偏好的高质量电影。</p></li>    <li><p><strong>类型：</strong><p></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;电影的受喜爱程度是否和它所属类型有关？观众喜爱的电影类型是否正在发生变化？对哪种的投资拍摄更容易吸引到更多观众？对电影类型的爬取可以帮助小组探索这个问题的答案。</p></li>    <li><p><strong>评论：</strong><p></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;电影的评论可以直观、详细、真实地反映观众对于电影的评价。这些评论中往往会反复出现一些关于这些电影的关键词，精准地找出这些关键词可以帮助小组进一步细化、筛选出电影中影响观众喜爱程度的因素。</p></li></ul><h3><strong>2.1.3：网页源码分析</strong></h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们首先进入<a href="https://www.maoyan.com">猫眼官网</a>,根据我们的数据获取要求，我们进入<a href="https://www.maoyan.com/films?showType=3&sortId=3">如下界面:</a><img src="https://pic1.zhimg.com/80/v2-82f3146e98725ddf7be392e61f5eba88_1440w.webp"><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这时，我们右击检查，开始定位我们需要的数据类型，我们发现在一级页面中，网页源码中只包含了电影名称、评分，他们的位置路径如下图：<img src="https://pic2.zhimg.com/80/v2-0a6bce2f6a976d5f11e1db263c6117fd_1440w.webp"><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;紧接着，我们发现我们剩下的数据，例如：类型、评论等，在二级页面，我们仔细观察后，在如下位置发现了可以用于拼接二级页面的规则编号，位置如下：</p><img src="https://pic2.zhimg.com/80/v2-43e0695970fa332296198ff46eef92e1_1440w.webp"><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;到此为止，我们已经完成了对网页源码的分析，接下来，就要进入代码实现阶段啦(*^▽^*)</p><h2><strong>2.2：Python爬虫代码实现</strong></h2><h3><strong>2.2.1：Python库准备</strong></h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在本次实现中，我们用到了如下几个库：</p><ul>    <li><p><strong>urllib：</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;它是 Python 内置的 HTTP 请求库，也就是说我们不需要额外安装即可使用，它包含四个模块：</p>    <ul>        <li>第一个模块 request，它是最基本的 HTTP 请求模块，我们可以用它来模拟发送一请求，就像在浏览器里输入网址然后敲击回车一样，只需要给库方法传入 URL 还有额外的参数，就可以模拟实现这个过程了。</li>        <li>第二个 error 模块即异常处理模块，如果出现请求错误，我们可以捕获这些异常，然后进行重试或其他操作保证程序不会意外终止。</li>        <li>第三个 parse 模块是一个工具模块，提供了许多 URL 处理方法，比如拆分、解析、合并等等的方法。</li>        <li>第四个模块是 robotparser，主要是用来识别网站的 robots.txt 文件，然后判断哪些网站可以爬，哪些网站不可以爬的，其实用的比较少。。</li>    </ul></li>    <li><p><strong>lxml：</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lxml是python的一个解析库，支持HTML和XML的解析，支持XPath解析方式，而且解析效率非常高。</p></li>    <li><p><strong>xlwt：</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以实现对excle的读写</p></li></ul><h3><strong>2.2.2：Python代码实现</strong></h3><p><strong>注释中包含了url规律分析</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#2022</span></span><br><span class="line"><span class="comment">#https://www.maoyan.com/films?yearId=17&amp;showType=3&amp;sortId=3</span></span><br><span class="line"><span class="comment">#https://www.maoyan.com/films?yearId=17&amp;showType=3&amp;sortId=3&amp;offset=30</span></span><br><span class="line"><span class="comment">#https://www.maoyan.com/films?yearId=17&amp;showType=3&amp;sortId=3&amp;offset=60</span></span><br><span class="line"><span class="comment">#https://www.maoyan.com/films?yearId=17&amp;showType=3&amp;sortId=3&amp;offset=90</span></span><br><span class="line"><span class="comment">#2021</span></span><br><span class="line"><span class="comment">#https://www.maoyan.com/films?yearId=16&amp;showType=3&amp;sortId=3</span></span><br><span class="line"><span class="comment">#https://www.maoyan.com/films?yearId=16&amp;showType=3&amp;sortId=3&amp;offset=30</span></span><br><span class="line"><span class="comment">#https://www.maoyan.com/films?yearId=16&amp;showType=3&amp;sortId=3&amp;offset=60</span></span><br><span class="line"><span class="comment">#https://www.maoyan.com/films?yearId=16&amp;showType=3&amp;sortId=3&amp;offset=90</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#url规律为：</span></span><br><span class="line"><span class="comment">#基础url=https://www.maoyan.com/films? 加上yearID=年份-2005 加上showType=3&amp;sortId=3&amp;offset=(页码-1)*30</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#//*[@id=&quot;app&quot;]/div/div[2]/div[2]/dl//dd//div[1]/a/@href 二级页面的url</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">creat_request</span>(<span class="params">page,year</span>):</span><br><span class="line">   <span class="comment">#定制url，方便循环</span></span><br><span class="line">   <span class="keyword">if</span> page == <span class="number">1</span>:</span><br><span class="line">      url = <span class="string">&#x27;https://www.maoyan.com/films?yearId=&#x27;</span>+<span class="built_in">str</span>(year-<span class="number">2005</span>)+<span class="string">&#x27;&amp;showType=3&amp;sortId=3&#x27;</span></span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">      url = <span class="string">&#x27;https://www.maoyan.com/films?yearId=&#x27;</span>+<span class="built_in">str</span>(year-<span class="number">2005</span>)+<span class="string">&#x27;&amp;showType=3&amp;sortId=3&#x27;</span>+<span class="string">&#x27;&amp;offset=&#x27;</span>+<span class="built_in">str</span>((page-<span class="number">1</span>)*<span class="number">30</span>)</span><br><span class="line">  </span><br><span class="line">   headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;uuid_n_v=v1; uuid=9A24E0F0631311EDBF6151208720BA007113D57EEFF04C3CA640F73319AF072A; _csrf=4d7ff24790b2c392970278265e244e3534b30e30b8da2dfd29d8c4a819f05503; Hm_lvt_703e94591e87be68cc8da0da7cbd0be2=1668317137; _lx_utm=utm_source%3DBaidu%26utm_medium%3Dorganic; _lxsdk_cuid=1846f734a21c8-01b03943f3297b-26021f51-190140-1846f734a21c8; _lxsdk=9A24E0F0631311EDBF6151208720BA007113D57EEFF04C3CA640F73319AF072A; Hm_lpvt_703e94591e87be68cc8da0da7cbd0be2=1668321628; __mta=148124936.1668317137787.1668321468086.1668321627622.19; _lxsdk_s=1846fb47f87-f6f-621-be8%7C%7C5&#x27;</span>,</span><br><span class="line">   </span><br><span class="line">   <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   request = urllib.request.Request(url=url,headers=headers)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> request</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_content</span>(<span class="params">request</span>):</span><br><span class="line">    response = urllib.request.urlopen(request)</span><br><span class="line">    <span class="comment">#用于检查报错</span></span><br><span class="line">    a = response.getcode() <span class="comment">#返回状态码 200则逻辑无误</span></span><br><span class="line"></span><br><span class="line">    content = response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">name_list</span>(<span class="params">content</span>):</span><br><span class="line">   </span><br><span class="line">    tree = etree.HTML(content)</span><br><span class="line">    <span class="comment">#Xpath解析源码</span></span><br><span class="line">    jieguo1 = tree.xpath(<span class="string">&#x27;//*[@id=&quot;app&quot;]/div/div[2]/div[2]/dl//dd/div[2]/@title&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jieguo1</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">score_list</span>(<span class="params">content</span>):</span><br><span class="line">   </span><br><span class="line">    tree = etree.HTML(content)</span><br><span class="line"></span><br><span class="line">    score = tree.xpath(<span class="string">&#x27;//*[@id=&quot;app&quot;]/div/div[2]/div[2]/dl//dd/div[3]//i/text()&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    score_1 = score[::<span class="number">2</span>]</span><br><span class="line">    </span><br><span class="line">    score_2 = score[<span class="number">1</span>::<span class="number">2</span>]</span><br><span class="line">    </span><br><span class="line">    jieguo2 = [p + q <span class="keyword">for</span> p,q <span class="keyword">in</span> <span class="built_in">zip</span>(score_1,score_2) ]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> jieguo2</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">url2_list</span>(<span class="params">content1</span>):</span><br><span class="line"></span><br><span class="line">    tree = etree.HTML(content1)</span><br><span class="line"></span><br><span class="line">    url_list = tree.xpath(<span class="string">&#x27;//*[@id=&quot;app&quot;]/div/div[2]/div[2]/dl//dd//div[1]/a/@href&#x27;</span>)</span><br><span class="line">    <span class="comment">#拼接二级页面的url，为访问二级页面做准备</span></span><br><span class="line">    url3 = [<span class="string">&#x27;https://www.maoyan.com&#x27;</span>+ <span class="built_in">str</span>(url2) <span class="keyword">for</span> url2 <span class="keyword">in</span> url_list]</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> url3</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_outcome</span>(<span class="params">name,score,url3,year,page</span>):</span><br><span class="line"></span><br><span class="line">    f = xlwt.Workbook(<span class="string">&#x27;encoding = utf-8&#x27;</span>) <span class="comment">#设置工作簿编码</span></span><br><span class="line">    </span><br><span class="line">    sheet1 = f.add_sheet(<span class="string">&#x27;1&#x27;</span>) <span class="comment">#创建sheet工作表</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">        </span><br><span class="line">        sheet1.write(i,<span class="number">0</span>,name[i]) <span class="comment">#写入数据参数对应 行, 列, 值</span></span><br><span class="line">        </span><br><span class="line">        sheet1.write(i,<span class="number">1</span>,score[i])</span><br><span class="line"></span><br><span class="line">        sheet1.write(i,<span class="number">2</span>,url3[i])</span><br><span class="line">    </span><br><span class="line">    f.save(<span class="built_in">str</span>(year)+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">str</span>(page)+<span class="string">&#x27;.xls&#x27;</span>)<span class="comment">#保存.xls到当前工作目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序的入口</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start_page = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入起始的页码&#x27;</span>))</span><br><span class="line">    end_page = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入结束的页码&#x27;</span>))</span><br><span class="line">    year = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入你要爬取的年份&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(start_page,end_page+<span class="number">1</span>):<span class="comment">#range函数左闭右开</span></span><br><span class="line">        <span class="comment">#   每一页都有自己的请求对象的定制</span></span><br><span class="line">        request = creat_request(page,year)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#   获取响应数据 </span></span><br><span class="line">        content1 = get_content(request)</span><br><span class="line">  </span><br><span class="line">        name = name_list(content1)</span><br><span class="line"></span><br><span class="line">        score = score_list(content1)</span><br><span class="line"></span><br><span class="line">        url3 = url2_list(content1)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#下载，写入excle</span></span><br><span class="line">        save_outcome(name,score,url3,year,page)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#用于检查程序是否运行正常，若打印[]，这说明ip被暂时封禁，无法获取源码</span></span><br><span class="line">        <span class="built_in">print</span>(name)</span><br><span class="line">        <span class="built_in">print</span>(score)</span><br><span class="line">        <span class="built_in">print</span>(url3)</span><br><span class="line">      </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结果实现如下，仅展示一张表格</strong</p><img src="https://pic2.zhimg.com/80/v2-f93969fcd126d1fae6925f1e596ec855_1440w.webp"><h2><strong>2.2.2.1：Python代码实现出现的问题</strong></h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在上面的代码结果中，可以看到，我们已经批量获取了2022年评分最高的前30部电影的名字、评分及详细情况的二级页面url。我们想要的评论、类型等数据都存储在二级页面之中，就像这样：</p><img src="https://pic3.zhimg.com/80/v2-9ea3058a0c5bcf8f780b4acbdf7bbdda_1440w.webp"><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本来我的想法已经形成了，既然我们已经获取了二级页面的url，我们可以再写一个函数，用来遍历每一个url，提取信息。想法很简单，但是由于猫眼反爬十分严格，问题频出，包括但不限于：<ul>    <li>如此频繁的访问页面会导致网站识别，被反爬，表现的具体形式即为：返回[]</li>    <li><p>二级页面的数据不在页面源码中，为异步加载，我们在审查是可以定位到，但是获取源码会发现不在源码中，而在审查-网络中可以发现这个文件，如下：</p>    <img src="https://pic3.zhimg.com/80/v2-292988f26bead9a0256b58e34406b312_1440w.webp">    <p>该页面的url不具有规律，我们无法进行批量访问</p></li>    <li>了解到这个问题后，我更换了selenium库进行自动化操作，但是猫眼反爬比较严格，当识别到请求者为selenium后，会拒绝访问</li>    <li><p>利用selenium_Phantomjs进行页面截图，也被识别如下：</p>    <img src="https://pic2.zhimg.com/80/v2-5fa1194c2db3f355fb10aa300a626ec1_1440w.webp"></li>    <li>我尝试了undetected-chromedriver等新的驱动，目前还未成功，所以目前的方案是手动打开批量获取的二级页面进行信息获取。</li></ul><p><strong>注：在日后的学习过程中会继续研究这个问题，比如利用猫眼移动端的url进行爬取，如若可以成功，将会更新在这里。</strong></p><p><h1>三.数据分析</h1></p><p>未完待续......</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> urllib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在同一台电脑上同时部署多个hexo博客</title>
      <link href="/posts/ac9cf1f1.html"/>
      <url>/posts/ac9cf1f1.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：下里巴人</p><footer><strong>来自</strong><cite>南京审计大学</cite></footer></blockquote><blockquote><p><strong>前言：</strong></p><p>在学习了如何搭建博客有，我便逐渐有了为辩论队搭建网站的想法，但是我发现没有我想象中的那么简单，于是在翻阅了众多大佬的记录后，磕磕绊绊终于成功实现了这个想法，便在此记录一下，供大家参考，也方便我自己以后忘了来看(*^▽^*)</p></blockquote><h1>一、问题来源及解决方法（引）</h1><ul> <li>SSH的公钥是GitHub作为本地仓库和远程仓库连接的唯一标识，一个公钥只能对应一个GitHub账户，如果将一个相同的公钥上传到不同的GitHub账户，GitHub则无法做出辨识，进而导致错误</li> <li>一台电脑，可以生成多对公私钥，可以通过配置，将不同的公钥上传到不同的GitHub账号，那么就不存在单个公钥绑定多个GitHub账号的情况存在了</li></ul><h1>二、解决过程</h1><p><strong>注：接下来建立在你已经完成了博客的部署，参见搭建博客，具体即已然完成至ssh链接之前的步骤</strong></p><h2><strong>创建新密钥</strong></h2><p>首先 在终端中输入以下指令，进入SSH根目录下，来检查已有密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh/</span><br></pre></td></tr></table></figure>在这个目录可以看到你现在有的密钥，紧接着，输入以下指令，来创建新的密钥：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -f  ~/.ssh/这里是新密钥名称 -C &quot;这里是你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>新密钥的名称不能重复，需要另设一个！</p><h2><strong>配置config文件</strong></h2><p>查看你的.ssh/根路径下, 有没有config文件,没有则在此目录中创建一个config文件（不需要任何后缀！！)</p><p>紧接着，用记事本或者直接用vscode打开这个文件，写入以下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#第一个账号，默认使用的账号，不用做任何更改</span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">#第二个新账号，#&quot;xxxxxx&quot;为前缀名，可以任意设置，要记住，后面需要用到</span><br><span class="line">Host xxxxxx.github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/这里是你创建的新密钥的名称</span><br></pre></td></tr></table></figure><h2><strong>设置新GitHub账户SSH key</strong></h2><p>按照从前的步骤，将新的sshkey添加至你的新Github账户，这里不再赘述</p><h2><strong>清空本地的SSH 缓存，添加新的SSH密钥到SSH agent中</strong></h2><p>在终端中输入以下指令，执行操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -D</span><br><span class="line">ssh-add xxxxxx #旧密钥名称，一般是id_rsa</span><br><span class="line">ssh-add xxxxxx #新创建的密钥名称</span><br></pre></td></tr></table></figure><p><strong>注：此操作终端应在ssh根目录下！</strong></p><p>如果这时候出现如下错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not open a connection to your authentication agent.</span><br></pre></td></tr></table></figure><p>这时你需要在终端输入,问题即可解决：</op><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent bash</span><br></pre></td></tr></table></figure><h2><strong>验证配置是否成功</strong></h2><p>依次执行以下命令，第一个为默认ssh_key验证；第二个为新的ssh_key验证，其中“xxxxxx”为你先前在config文件中的命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@xxxxxxx.github.com</span><br></pre></td></tr></table></figure><p>依次显示以下信息, 则说明配置成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi 你的用户名! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h2><strong>取消全局用户名/邮箱配置，单独设置用户名/邮箱</strong></h2><p>在我们第一个博客的设置中，我们不出意外应该设置的是全局变量，所以在这里我们需要取消一下全局配置，输入以下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset user.name</span><br><span class="line">git config --global --unset user.email</span><br></pre></td></tr></table></figure><p>接下来开始设置单独变量，这是需要进入博客文件.deploy_git文件夹中，设置隐藏文件可见（属性） .git，然后在其中的config文件中加入以下配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[user]</span><br><span class="line">    name = yannan</span><br><span class="line">    email = 781369549@qq.com</span><br></pre></td></tr></table></figure><h2><strong>hexo 配置文件修改git地址</strong></h2><p>打开你的第二个博客Hexo目录下的_config.yml文件，找到deploy关键字，写入以下配置并保存：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@xxxxxx.github.com:你的用户名/你的用户名.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p><strong>注：这里的配置与之前有些许不同，比如repo的写法，这样写的好处是可以避免部署失败的情况出现，其他别无二致。</strong></p><h1>三、小结</h1><p>到此，问题就解决啦，完美的在电脑上同时部署了多个hexo博客，如果遇到别的报错，大家可以联系我，或者在网上搜寻一下报错的解决方法哦(*^▽^*)</p>    ]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生活随笔（会一直更新）</title>
      <link href="/posts/35945283.html"/>
      <url>/posts/35945283.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：下里巴人</p><footer><strong>来自</strong><cite>南京审计大学</cite></footer></blockquote><div class="timeline "><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-7-11</p></div></div><div class='timeline-item-content'><p>刚刚带了一会我的侄子，他在绘声绘色的描述他怎么在幼儿园拿下了好多好多贴纸，突然很小声和我说：“xxx说要和我结婚”，哈哈哈然后我问他，那你喜欢xxx吗，我居然在一个小班的同志脸上看到了害羞，聊了一会，他奶奶和他说赶紧吃饭 他好朋友xx在楼下等他，小炮还挺开心，蹦蹦跳跳的出去，和我说我好久没有见到xx了。对，我也好久没有见到我的朋友啦。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-7-16</p></div></div><div class='timeline-item-content'><p>在国服匹配打了一把核子cs，遇到一个高中生，他一直在语音里说话，我嫌他吵关了一会声音，毕竟休闲，我就又打开问他，“你多大了”“高一，准备辍学了”？？“为啥”我很疑惑，他说学不下去，我问他接下来想干啥呢，他说去做b站up主，我心里突然很不是滋味，我发枪给他，他对着其实不是很贵的皮肤大声惊呼，这感觉很奇怪。“你还是继续学下去吧，好歹去大专学个技术”我继续道，“不，学不下去”“你会剪辑吗？你要当up主这个必须要会”“会一点，可我没有电脑…”“……”我良久无言，莫名震撼。很快，比赛结束了，“好好生活”，我对他说。“嗯，我们都想好好生活，也一定能这样，对吗？”，我看着一地鸡毛。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-7-31</p></div></div><div class='timeline-item-content'><p>最近实习两周了，这次实习不仅仅是丰富履历，更是一次见识。哈哈，喜欢过的人过的很幸福 有爱的人爱她；生活圈更是我遥不可及的；我是不是该更努力点 找到我自己想要的呢 摆脱一地鸡毛 不只是说说而已 我想 创造自己的生活 </p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一些矫情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫-scrapy框架介绍及基础指令</title>
      <link href="/posts/f2c8fa34.html"/>
      <url>/posts/f2c8fa34.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：下里巴人</p><footer><strong>来自</strong><cite>南京审计大学</cite></footer></blockquote><blockquote><p><strong>前言：</strong></p><p>这个学期，博主有一门课叫做“数据采集技术”，于是我在暑假自学的爬虫又开始攻击我了（doge。这篇博客就暂且作为我复习爬虫的开始吧o(╥﹏╥)o，如题所述，接下来就开始scrapy框架的介绍和基础指令！</p></blockquote><p><h1>一.Scrapy框架介绍</h1></p><img src="https://www.wenjiangs.com/wp-content/uploads/2020/02/scrapy-s.jpg"><p><h2>1.简介</h2></p><p>Scrapy是适用于Python的一个快速、高层次的屏幕抓取和web抓取框架，用于抓取web站点并从页面中提取结构化的数据。Scrapy用途广泛，可以用于数据挖掘、监测和自动化测试。Scrapy吸引人的地方在于它是一个框架，任何人都可以根据需求方便的修改。它也提供了多种类型爬虫的基类，如BaseSpider、sitemap爬虫等，最新版本又提供了web2.0爬虫的支持。</p><p><h2>2.架构</h2></p><ul> <li><strong>Scrapy Engine(引擎)：</strong><br>负责Spider、ItemPipeline、Downloader、Scheduler中间的通讯，信号、数据传递等。</li> <li><strong>Scheduler(调度器)：</strong><br>它负责接受引擎发送过来的Request请求，并按照一定的方式进行整理排列，入队，当引擎需要时，交还给引擎。</li> <li><strong>Downloader（下载器）：</strong><br>负责下载Scrapy Engine(引擎)发送的所有Requests请求，并将其获取到的Responses交还给Scrapy Engine(引擎)，由引擎交给Spider来处理。</li> <li><strong>Spider（爬虫）：</strong><br>它负责处理所有Responses,从中分析提取数据，获取Item字段需要的数据，并将需要跟进的URL提交给引擎，再次进入Scheduler(调度器)。</li> <li><strong>Item Pipeline(管道)：</strong><br>它负责处理Spider中获取到的Item，并进行进行后期处理（详细分析、过滤、存储等）的地方。</li> <li><strong>Downloader Middlewares（下载中间件）：</strong><br>一个可以自定义扩展下载功能的组件。</li> <li><strong>Spider Middlewares（Spider中间件）：</strong><br>一个可以自定扩展和操作引擎和Spider中间通信的功能组件。</li></ul><p><h3>流程示意图</h3></p><img src="https://tse1-mm.cn.bing.net/th/id/OIP-C.uI4EmDi3NDV4KwCm7PLTJwHaEy?pid=ImgDet&rs=1"><p>博主是在b站尚硅谷自学的scrapy框架，在他的教程中有一张简易化的框架图，我略作优化，放在下面哈，也许会更有助于大家的理解。</p><img src="https://pic2.zhimg.com/80/v2-cafa2676d86bb4020e67b0f178f30025_1440w.webp"><p><h2>3.工作原理</h2></p><ol> <li>引擎向spiders要url</li> <li>引擎将要爬取的url给调度器</li> <li>调度器会将url生成请求对象放入到指定的队列中</li> <li>从队列中出队一个请求</li> <li>引擎将请求交给下载器进行处理</li> <li>下载器发送请求获取互联网数据</li> <li>下载器将数据返回给引擎</li> <li>引擎将数据再次给到spiders</li> <li>spiders通过xpath解析该数据，得到数据或者url</li> <li>spiders将数据或url给到引擎</li> <li>引擎判断该数据是url还是数据，是数据，交给管道（item pipeline）处理，是url交给调度器处理</li></ol><p><h1>二.工具准备</h1></p><p><h2>1.Python环境及Scrapy、lxml库下载（vscode为例）</h2></p><p>以博主为例，我使用的python版本为3.6.13;Scrapy版本为 2.6.1</p><p>在终端中输入以下指令，来下载scrapy，lxml库</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy</span><br><span class="line">pip install lxml</span><br></pre></td></tr></table></figure><p>如果想指定下载版本可以输入以下指令（以2.6.1为例）</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy==2.6.1</span><br></pre></td></tr></table></figure><p>下载后输入以下指令看是否成功，如果成功会出现这样的画面：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">scrapy --version</span><br><span class="line"></span><br><span class="line">Scrapy 2.6.1 - no active project</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  scrapy &lt;command&gt; [options] [args]</span><br><span class="line"></span><br><span class="line">Available commands:</span><br><span class="line">  bench         Run quick benchmark test</span><br><span class="line">  commands      </span><br><span class="line">  fetch         Fetch a URL using the Scrapy downloader</span><br><span class="line">  genspider     Generate new spider using pre-defined templates</span><br><span class="line">  runspider     Run a self-contained spider (without creating a project)</span><br><span class="line">  settings      Get settings values</span><br><span class="line">  shell         Interactive scraping console</span><br><span class="line">  startproject  Create new project</span><br><span class="line">  version       Print Scrapy version</span><br><span class="line">  view          Open URL in browser, as seen by Scrapy</span><br><span class="line"></span><br><span class="line">  [ more ]      More commands available when run from project directory</span><br><span class="line"></span><br><span class="line">Use &quot;scrapy &lt;command&gt; -h&quot; to see more info about a command</span><br></pre></td></tr></table></figure><p><h2>2.xpath插件</h2></p><p><h3>Xpath介绍</h3></p><img src="https://ts1.cn.mm.bing.net/th/id/R-C.d21d2874b33fc3c2ffc0c3c7d3428781?rik=226dSM6a5FlEug&riu=http%3a%2f%2fstatic.article.iis7.com%2fimgcj%2f2020%2f18%2f0117479.jpg&ehk=3rHvhMb978aL%2bTFvoRDmy6mPeElS4tp4BeBOHH97AzU%3d&risl=&pid=ImgRaw&r=0"><p>XPath即为XML路径语言（XML Path Language），它是一种用来确定XML文档中某部分位置的语言。XPath基于XML的树状结构，提供在数据结构树中找寻节点的能力。<br><p>我们可以下载一个浏览器的xpath辅助插件，可以帮助我们确实语法正确与否，并反馈给我们可以解析到的数据，具体安装教程我放在下面。<br><strong>注：不同的浏览器需要安装不同的插件，以自己喜好为准哦！</strong></p><blockquote><p><a href="https://blog.csdn.net/weixin_64471900/article/details/124314236">https://blog.csdn.net/weixin_64471900/article/details/124314236</a></p><footer><strong>xpath插件</strong></footer></blockquote><strong>这也是我们需要提前学习的，十分简单，但是需要基础的html语法知识，用他来解析html十分的简洁，xpath语法的学习文档我会放在下面，可以去学习一下哦！</strong></p><blockquote><p><a href="https://www.runoob.com/xpath/xpath-tutorial.html">https://www.runoob.com/xpath/xpath-tutorial.html</a></p><footer><strong>xpath语法</strong></footer></blockquote><p><h1>三.基础指令</h1></p><p><h2>创建爬虫项目</h2></p><p>首先，一定是创建爬虫项目，在终端中输入以下指令：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject 项目名称</span><br></pre></td></tr></table></figure><p><strong>注：不能以数字开头 也不能包含中文</strong></p><p>这时，你会发现当前文件夹目录下出现了一个新的文件夹，文件夹名字为你刚刚输入的 项目名称。这代表项目已经创建成功啦！</p><p><h2>创建爬虫文件</h2></p><p>首先，我们要将自己的终端切换到我们的爬虫文件中，在终端中输入以下指令:</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 项目名称\项目名称\spiders</span><br></pre></td></tr></table></figure><p>接着，我们要创建文件，在终端中继续输入：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy genspider 爬虫文件的名字 要爬的网页</span><br></pre></td></tr></table></figure><p style="color:red"><strong>注：文件名和项目名不能相同，否则会报错</strong></p><p>例子：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy genspider ceshi1 www.baidu.com</span><br></pre></td></tr></table></figure><p style="color:red"><strong>注：一般情况不需要添加http协议 因为start_url的值是根据allowed_domains的值修改的    当起始url结尾是html是 需要去掉/</strong></p><p>这是你可以看到，项目文件夹下的spider文件夹中，多出了一个你命名的新文件，其中内容类似于：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ceshi1Spider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;ceshi1&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;www.baidu.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;http://www.baidu.com/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>具体含义及用法会在下一篇中介绍，到这里我们已经成功完成了爬虫文件的建立</p><p><h2>此时爬虫文件夹架构介绍</h2></p><p>在完成上一步后，我们可以看到新创建好的项目文件夹下有很多我们不认识的文件，他们的意思是什么呢，我们来简单介绍一下：</p><img src="https://pic3.zhimg.com/80/v2-c8f01241a67c959ada7c1fe09a80a58a_1440w.webp"><p><h2>运行爬虫文件</h2></p><p>当你完成了一份爬虫文件，想要运行调试怎么办？请在终端中输入以下指令：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl 爬虫文件的名字</span><br></pre></td></tr></table></figure><p>即可运行</p><p><strong>好啦，这篇文章就到此为止了，相信通过上面的叙述你应该可以自主的创建一个爬虫项目了，至于如何开始真正的项目，下一篇博客就会以一个例子作为介绍，我也有点忘了，先让我复习一波（doge</strong></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何发布/个性化你的博客（以Vscode为例）</title>
      <link href="/posts/8bec8784.html"/>
      <url>/posts/8bec8784.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：下里巴人</p><footer><strong>来自</strong><cite>南京审计大学</cite></footer></blockquote><blockquote><p><strong>前言：</strong></p><p>在上一篇中我已经完整地（在我看来）叙述了如何搭建并且部署你的博客，那现在，我们就要开始进入创作/发布/个性化你的博客啦~</p></blockquote><p><h1>一.知识储备</h1></p><p>相信大家一定迫不及待的想要创作自己的第一篇博客了，那我们究竟需要学习哪些知识呢？</p><p><h2>Markdown</h2></p><img src="https://ts1.cn.mm.bing.net/th/id/R-C.60ab59ec7db015db8f6d236d06d6e0c3?rik=iCaSaep925OfgA&riu=http%3a%2f%2fwww.bettertechtips.com%2fwp-content%2fuploads%2f2017%2f08%2fonline-markdown.png&ehk=bAfcaIgHImvBpuVdwkcHIM4ueSxdTUyjcIMrkiYlDKQ%3d&risl=&pid=ImgRaw&r=0"><p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。由于 Markdown 的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。 如 GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。</p><p><h2>Html</h2></p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.Hea8t_dY8VziR9woyQ6OkgAAAA?w=163&h=180&c=7&r=0&o=5&dpr=1.5&pid=1.7"><p>HTML的全称为超文本标记语言，是一种标记语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性文本，HTML命令可以说明文字，图形、动画、声音、表格、链接等。超文本是一种组织信息的方式，它通过超级链接方法将文本中的文字、图表与其他信息媒体相关联。这些相互关联的信息媒体可能在同一文本中，也可能是其他文件，或是地理位置相距遥远的某台计算机上的文件。这种组织信息方式将分布在不同位置的信息资源用随机方式进行连接，为人们查找，检索信息提供方便。</p><p><strong>注：以上是两种可以用来书写博客的标记语言，通常来说，由于我们现在hexo框架下的博客文件为.md-即markdown文件，所以一般第一选择是用markdo语法进行书写。然而....由于博主我先学的html，所以在懒惰的驱使下，我发现html语言也可以在md文件中被识别，所以html也是可以用在这里的。（当然，markdown和html十分类似，前往官方文档学习还是很快的，我会把学习文档链接放在下面。</strong></p><blockquote><p><a href="https://markdown.com.cn/basic-syntax/">https://markdown.com.cn/basic-syntax/</a></p><footer><strong>Markdown</strong></footer></blockquote><blockquote><p><a href="http://www.w3chtml.com/html/html-basic-grammar.html">http://www.w3chtml.com/html/html-basic-grammar.html</a></p><footer><strong>Html</strong></footer></blockquote><p>在完成我们的知识储备后，我们就可以开始创作啦</p><p><h1>二.创建新博客，并进行预览/发布</h1></p><p><h2>新建一个博客</h2></p><p>首先，我们要创建一个博客文件，在终端中输入下列指令：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new 你的博客题目</span><br></pre></td></tr></table></figure><p>这时候，你的source\_posts 文件夹中就出现了博客文件，如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 测试</span><br><span class="line">date: 2022-10-07 14:00:35</span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这代表你已经创建成功啦。具体如何创作，例如模块插入，这些都可以在hexo官方文档中查阅学习到，这里就不过多赘述啦(*^▽^*)</p><blockquote><p>hexo官方文档：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p></blockquote><p><h2>对创作内容进行生成预览/发布</h2></p><p>在这个环节之前，我们先来介绍一下著名的“Hexo四连”(滑稽</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><ui> <li>hexo clean:清除缓存，也就是清除你之前生成的东西，也可以不加，但是经常清除一下也未尝不是个好习惯（doge</li> <li>hexo generate:顾名思义，生成静态文章，可以用<em>hexo g</em>缩写代替</li> <li>hexo server:提供一个本地网址供你进行效果预览，文章内容修改或者主题修改保存后刷新即可；对于_config.yml的修改需要重启本地服务器。可以用<em>hexo s</em>缩写代替</li> <li>hexo deploy:部署文章 可以用<em>hexo d</em>缩写代替</li></ul><p>其实到这，基本已经讲完啦，将你写完的博客文件进行上述操作，即可发布</p><p>下面提供我的第一篇博客的源代码供大家参考，结构比较混乱，浅浅参考一下吧（滑稽</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 一位金融数学专业计算机小白的自我介绍（doge</span><br><span class="line">author: 下里巴人</span><br><span class="line">date: 2022-10-05 11:45:41</span><br><span class="line">tags:</span><br><span class="line">- 大学生</span><br><span class="line">- 自我介绍</span><br><span class="line">cover: https://ts1.cn.mm.bing.net/th/id/R-C.63563516c3924898563e40ce4ae45f77?rik=HrtdcT%2bHjPgCmA&amp;riu=http%3a%2f%2f121.40.114.220%2fwp-content%2fuploads%2f2016%2f09%2fmeixi.jpg&amp;ehk=xigwyTNGmW7d0RuPCG4onkXk%2f01AJlHr3UKt4NnybbM%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0</span><br><span class="line">---</span><br><span class="line">&lt;blockquote&gt;&lt;p&gt;作者：下里巴人&lt;/p&gt;</span><br><span class="line">&lt;footer&gt;&lt;strong&gt;来自&lt;/strong&gt;&lt;cite&gt;南京审计大学&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;</span><br><span class="line">&lt;p&gt;&lt;h1&gt;关于我&lt;/h1&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我来自江苏无锡，目前就读于南京审计大学金融数学专业，所以四舍五入可以说我在南大上学（不是&lt;br&gt;</span><br><span class="line">我的业余爱好是足球，辩论...我是梅西人迷hhh goat！！！&lt;br&gt;</span><br><span class="line">正在努力学习python,matlab,html....欢迎大家与我交流，我会在下面提供我的联系方式^_^&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;h1&gt;联系方式&lt;/h1&gt;&lt;/p&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">     &lt;li&gt;Tel:18151695632&lt;/li&gt;</span><br><span class="line">     &lt;li&gt;Emile:1169153079@qq.com&lt;/li&gt;</span><br><span class="line">     &lt;li&gt;QQ:1169153079&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;p&gt;&lt;h1&gt;创作博客的目的&lt;/h1&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;记录，分享自己的在学习方面的经历，也许还会记录自己的生活hh&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注：我都是使用html语法进行书写，所以仅供参考哈，目前还没有发现兼容问题 （但愿以后也不要发现o(╥﹏╥)o</strong></p><p><h1>个性化自己的博客/主题</h1></p><p>由于这一部分比较复杂，且我自己还不是很能完整的叙述，所以我就贴一个我觉得有帮助的链接，大家可以按照这篇文章的指引，去设计自己的博客啦</p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/385525053">https://zhuanlan.zhihu.com/p/385525053</a></p><footer><strong>hexo博客更换自己的主题</strong></footer></blockquote><p>本章到此结束啦，如果你觉得哪里不合理，或者实际操作中有什么问题，欢迎联系我与我讨论哦</p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> html </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>艰苦历程之—Hexo+Github博客搭建</title>
      <link href="/posts/1706a3c7.html"/>
      <url>/posts/1706a3c7.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：下里巴人</p><footer><strong>来自</strong><cite>南京审计大学</cite></footer></blockquote><blockquote><p><strong>前言:</strong></p>相比其他大佬，作为小白的我写的搭建历程肯定漏洞百出o(╥﹏╥)o，但我还是会尽量考虑到一些操作细节，帮助大家避免我曾经遇到的问题（doge，就图一乐哈！，如果想要更详细的教程，请移步CSDN噢！</blockquote><p><h1>一.什么是博客？</h1></p><blockquote><p>指在博客（Blog或Weblog）的虚拟空间中发布文章等各种形式的过程。简言之，Blog就是以网络作为载体，简易迅速便捷地发布自己的心得，及时有效轻松地与他人进行交流，再集丰富多彩的个性化展示于一体的综合性平台。不同的博客可能使用不同的编码，所以相互之间也不一定兼容。而且，很多博客都提供丰富多彩的模板或其他个性化方案，这使得不同的博客各具特色。Blog是继Email、BBS、ICQ之后出现的第四种网络交流方式，至今已十分受大家的欢迎，是网络时代的个人“读者文摘”，是以超级链接为入口的网络日记，是代表着新的生活方式和新的工作方式，更代表着新的学习方式。具体说来，博客（Blogger）这个概念解释为使用特定的软件，在网络上出版，发表和张贴个人文章的人。</p><footer><strong>来自</strong><cite>百度百科</cite></footer></blockquote><p><h1>二.为何用hexo+github搭建个人博客？</h1></p><p><h2>建立博客存在的一些问题</h2></p><ul>  <li>商业化的博客平台自由度低，广告多</li>  <li>自己购买域名，服务器成本高</li>  <li>需定期维护，过于耗费精力</li></ul><p><h2>如何解决以上问题？</h2></p><p>基于开源框架搭建博客，直接在<em>github page</em>平台上托管我们的博客。无需关心网页源代码的具体生成细节，只需要用心写好博客内容即可<br><strong>注：虽然这么说，但是我觉得还是挺麻烦的（doge ，当然，只是对我来说 O(∩_∩)O</strong><p>下面，就开始正式进入我的艰难搭建之旅啦o(╥﹏╥)o</p><p><h1>三.搭建流程</h1></p><p><h2>&nbsp;&nbsp;&nbsp;工具介绍</h2></p><p><h3><strong>Vscode</strong></h3></p><img src="https://ts1.cn.mm.bing.net/th?id=OIP-C.TY9Ic3mQBQRIRZsq8mUWewHaHa&w=144&h=170&c=8&rs=1&qlt=90&o=6&dpr=1.5&pid=3.1&rm=2"><p>VSCode（全称：Visual Studio Code）是一款由微软开发且跨平台的免费源代码编辑器。 该软件支持语法高亮、代码自动补全（又称 IntelliSense）、代码重构、查看定义功能，并且内置了命令行工具和 Git 版本控制系统。</p><p><strong>强烈推荐！！！！基本全栈都可以在这款编辑器中编写，且轻量化，支持中文！！是小白的福音！！</strong></p><p><h3><strong>Git</strong></h3></p><img src="https://tse4-mm.cn.bing.net/th/id/OIP-C.kA2tpV8So5280jyvzuBjcgHaDg?w=350&h=165&c=7&r=0&o=5&dpr=1.5&pid=1.7"><p>Git（读音为/gɪt/）是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 [1]  也是Linus Torvalds为了帮助管理Linux内核开发而开发的一个开放源码的版本控制软件。</p><p><h3><strong>Hexo</strong></h3></p><img src="https://tse4-mm.cn.bing.net/th/id/OIP-C.j7Bw19HA9uWHkX0nf_JlkQHaEK?w=311&h=180&c=7&r=0&o=5&dpr=1.5&pid=1.7"><p>Hexo是一款基于Nodejs的，快速、简洁且高效的博客框架。具有丰富的插件和主题，具有超快的速度。支持Makedown语法，可以方便快捷的编写博客文档。同时支持node命令，可以一键部署到GitHub Pages, Heroku 或其他平台。</p><p><h3><strong>Github</strong></h3></p><img src="https://tse1-mm.cn.bing.net/th/id/OIP-C.2gD5c6D3issQr1wLj-2LGwHaDt?w=321&h=175&c=7&r=0&o=5&dpr=1.5&pid=1.7"><p>GitHub是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名GitHub。GitHub于2008年4月10日正式上线，除了Git代码仓库托管及基本的Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。</p><p><h3><strong>Node.js</strong></h3></p><img src="https://www.runoob.com/wp-content/uploads/2014/03/nodejs.jpg"><p>简单的说 Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于 Chrome JavaScript 运行时建立的一个平台。Node.js 是一个事件驱动 I/O 服务端 JavaScript 环境，基于 Google 的 V8 引擎，V8 引擎执行 Javascript 的速度非常快，性能非常好。<p><p><h2>&nbsp;&nbsp;&nbsp;工具准备</h2></p><p style="color:red"><strong>注：在下载nodejs与hexo后，如若在操作无误的情况下检验下载成功时报错，这时需要重启电脑。</strong></p><p><h3>下载node.js</h3></p><p>请基于你自己的电脑操作系统类型，选择合适的版本下载</p><blockquote><p><a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><footer><strong>Node.js</strong></footer></blockquote><p>下载完成后在vscode提供的powershell终端中输入一下指令($不需要输入哦,它代表你要输入的指令），来检验是否安装成功。（当然，如果没有下载，也可以使用win+R调用cmd终端</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ node --version</span><br><span class="line">v16.16.0</span><br><span class="line"></span><br><span class="line">$ npm --version</span><br><span class="line">npm WARN config global `--global`, `--local` are deprecated. Use `--location=global` instead.</span><br><span class="line">8.15.1</span><br></pre></td></tr></table></figure><p>如果出现以上信息，就代表已经安装成功啦！！！</p><p><h3>下载Git</h3></p><blockquote><p><a href="https://git-scm.com/">https://git-scm.com/</a></p><footer><strong>Git</strong></footer></blockquote><p><strong>注：下载后去所在文件夹点击安装！！</strong></p><p>下载完成后在终端输入：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">v16.16.0</span><br><span class="line">git version 2.38.0.windows.1</span><br></pre></td></tr></table></figure><p>有如上显示就代表成功啦！</p><p><h3>下载vscode</h3></p><p>下面是vscode的官方链接<p><blockquote><p><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><footer><strong>Vscode</strong></footer></blockquote><p><h3>下载Hexo</h3></p><p>下载之前，可以先去Hexo的官方文档熟悉了解操作，网址我贴在下面啦！！（自己看官方文档也是很重要的学习过程哦）<p><blockquote><p>hexo官方文档：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p></blockquote><p>接下来，在你的终端中输入一下内容，快速下载hexo</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>接下来就静待你的电脑安装hexo啦，等到安装结束，输入一下指令，来验证是否安装成功</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --version</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line">os: win32 10.0.19044</span><br><span class="line">node: 16.16.0</span><br><span class="line">v8: 9.4.146.24-node.21</span><br><span class="line">uv: 1.43.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">ares: 1.18.1</span><br><span class="line">modules: 93</span><br><span class="line">nghttp2: 1.47.0</span><br><span class="line">napi: 8</span><br><span class="line">llhttp: 6.0.7</span><br><span class="line">openssl: 1.1.1q+quic</span><br><span class="line">cldr: 40.0</span><br><span class="line">icu: 70.1</span><br><span class="line">tz: 2021a3</span><br><span class="line">unicode: 14.0</span><br><span class="line">ngtcp2: 0.1.0-DEV</span><br><span class="line">nghttp3: 0.1.0-DEV</span><br></pre></td></tr></table></figure><p style="color:red"><strong>如若出现一下情况:</strong></p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo : 无法加载文件 C:\Users\username\AppData\Roaming\npm\hexo.ps1`，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 `about_Execution_Policies`。</span><br><span class="line">所在位置 行:1 字符: 1</span><br></pre></td></tr></table></figure><p>不要慌,在windows自带的搜索栏中搜索powershell，选择以管理员身份运行，输入以下代码：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy -ExecutionPolicy UNRESTRICTED</span><br></pre></td></tr></table></figure><p>接下来会蹦出来一大串你看不懂的代码，不要慌张，无脑输入y,然后回车，这时回到vscode中输入hexo --version就不会报错啦</p><p>现在，你已经准备好所有工具啦，现在，就开始搭建我们的博客咯(*^▽^*)</p><p><h3>创建博客本地文件夹</h3></p><p>首先，在你电脑合适的位置创建一个文件夹，注意用英文，因为中文文件夹可能会引发兼容问题，所以先给自己的文件夹取个洋气的英文名。<br>创建完之后，就在你的终端输入如下命令：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd &lt;your folder name&gt;</span><br><span class="line">$ hexo init</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>这时候你会发现，你创建的文件夹出现了很多其他文件，这时候就代表已经成功啦,你的终端会显示如下内容</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>这些指令的意义后续我们会给出介绍，以后就会慢慢熟悉啦。点击上面的链接，如若能够跳转，就已经生成成功啦</p><p><h3>注册github账户</h3></p><p>这里网上已经有很多介绍啦，这里不再赘述，可以参考下面的教程<p><p><strong>注：因为是境外网站，所以完成这一步需要一些魔法(*^▽^*)咳咳...</strong></p><blockquote><p><a href="https://blog.csdn.net/xingkaifan/article/details/81105352">https://blog.csdn.net/xingkaifan/article/details/81105352</a></p><footer><strong>Github</strong></footer></blockquote><p><h3>在github中建立一个仓库</h3></p><p>同上，不过多赘述啦</p><blockquote><p><a href="https://blog.csdn.net/weixin_43729943/article/details/103915046">https://blog.csdn.net/weixin_43729943/article/details/103915046</a></p><footer><strong>Github</strong></footer></blockquote><p style="color:red"><strong>这边需要强调的是，因为我们最终目的是将我们的博客部署上去，所以我们创建仓库的名字一定要为 github用户名 .github.io</strong></p><p><h3>ssh连接</h3></p><p><h4>ssh是什么？</h4></p><blockquote><p>简单说，SSH是一种网络协议，用于计算机之间的加密登录。如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。最早的时候，互联网通信都是明文通信，一旦被截获，内容就暴露无疑。1995年，芬兰学者Tatu Ylonen设计了SSH协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为Linux系统的标准配置。SSH只是一种协议，存在多种实现，既有商业实现，也有开源实现。</p><footer><strong>from</strong><cite>https://blog.csdn.net/u013452337/article/details/80847113</cite></footer></blockquote><p>你并不需要十分了解，我们只需要知道我们需要用这个协议连接你和github<br>如果你之前没有用过的话，我们需要利用ssh-keygen的命令先生成属于你的密钥对</p><p>输入以下指令(因为github使用密钥时要求为rsa算法，所以接下来的密钥算法我们指定为rsa<p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>为了方便，接下来可以一直回车，储存至默认位置，默认为空串，当然，你也可以指定（doge<br>当然，终端也会告诉你最终位置在哪</p><p>这时候，找到你的公钥，用记事本或者vscode打开，复制好那长长的一串，比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDjyY4QeOgoOZEPg1KhQmr2jgv6WeI0bykEvw3cH8I0gzEKtc+w2TK4XMFx9Y1lw7SoEZmK93Cro+76c/1V/yLbVtF14aPVjB6qo5f3sH5HwRscFysftY9j7R/oUvC1l+12Xe6AJWUwBefZk181ym0XAR6potdvcIqQ0eDYciu3On6W85tMG8iVzlsx9cMiDAgS8WtPrBAKgLPj4OqrVr3FJJW1W84myZezuXjSLdedV106BV3S3Uax/3DtaH3gQcxqt4Aor0ydr1P9BQsyL+SDuOM7f2mTlRmdwoI5zBNcs0z8+ECEJbh1MbkJCox7w4iwbx0NWoWRJgniva3bCw9QUr6iPUurI/2CIsAFiyw4Cbkj1aMaYTKi+uQfAJ3A6JUlWV/JlTQB7oRjXnbX/yqeR8H7IIF85AtkkLFwpB+t2nqnfb6TcWFNlDaSYB50RLcqP6IdjWYB+lhc5o/InkdCM70t75mMj/01o0X4p2XDSViZd2JSJYSlUVn5clYg3c0= 11691@DESKTOP-BKLSOI2</span><br></pre></td></tr></table></figure><p style="color:red"><strong>这里需要着重强调一下，这个公钥文件一定是.pub 同时生成的另一个文件一定不能泄露！！！非常重要<br>(据说大佬拿到这个就可以远程登陆你的电脑了，你也希望要留清白在人间吧（滑稽</strong></p><p>接下来，打开你的github，打开设置，来到如下页面：</p><img src="https://pic1.zhimg.com/80/v2-7ecc83551fdb3a0677e6b733e77046bc_1440w.webp"><p>新建一个密钥，复制上述公钥，就可以啦</p><p><h3>初始化你的git用户名和邮箱</h3></p><p>小声bb：我自己搭建的时候就是因为我参考的教程没有提及这一点，导致我一度情绪爆发（doge</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>这里的"yourname""youremail"是你对应的Github用户名与邮箱</p><p><h2>四.部署你的博客</h2></p><p>打开你的配置文件：_config.yml </p><p>并在文件下方<em>deploy</em>补全如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 你的仓库地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>输入以下指令：</p><figure class="highlight plaintext"><figcaption><span>Powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>在完成后，打开你的浏览器，输入 你的名字 .github.io，如果能成功跳转那么恭喜你，你已经完成了博客的部署！！！</p><p>细心的你也许会发现，这时候你的博客已经发出了第一篇文章 <em>Hollow World</em> &nbsp;&nbsp;&nbsp;(doge 好像万物的起点就是这个O(∩_∩)O</p><p><h2>结尾</h2></p><p>好啦，已经到深夜了，现在是2022/10/7 凌晨0:37 我终于完成了真正意义上的第一篇博客！！介绍完了搭建部署，那就下一篇讲讲怎么个性化你的博客吧（doge</p><p style="color:blue; font-size:72px;">晚安！</p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一位金融数学专业计算机小白的自我介绍（doge</title>
      <link href="/posts/ea1bff1b.html"/>
      <url>/posts/ea1bff1b.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：下里巴人</p><footer><strong>来自</strong><cite>南京审计大学</cite></footer></blockquote><p><h1>关于我</h1></p><p>我来自江苏无锡，目前就读于南京审计大学金融数学专业，所以四舍五入可以说我在南大上学（不是<br>我的业余爱好是足球，辩论...我是梅西人迷hhh goat！！！巴萨！！！！<br>正在努力学习python,matlab,html....欢迎大家与我交流，我会在下面提供我的联系方式^_^</p><p><h1>联系方式</h1></p>    <ul>     <li>Tel:18151695632</li>     <li>Emile:1169153079@qq.com</li>     <li>QQ:1169153079</li>    </ul><p><h1>创作博客的目的</h1></p><p>记录，分享自己的在学习方面的经历，也许还会记录自己的生活hh</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我介绍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
